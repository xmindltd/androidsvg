// Handles the upload to Sonatype.

// This build file requires a recent Gradle (4.9+ ?)

//apply plugin: 'java-library'
apply plugin: 'maven-publish'


def  versionName = '1.6'

def  libraryName = 'AndroidSVG'
def  libraryDescription = 'SVG rendering library for Android.'

def  artifactIdAAR = 'androidsvg-aar'
def  group = 'com.caverock'

def  developerId = 'BigBadaboom'
def  developerName = 'Paul LeBeau'
def  developerEmail = 'androidsvgfeedback@gmail.com'

def  siteUrl = 'https://github.com/xmindltd/androidsvg'
def  gitUrl = 'https://github.com/xmindltd/androidsvg.git'

def  licenseName = 'The Apache Software License, Version 2.0'
def  licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

publishing {
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = versionName.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }

    publications {
        mavenAAR(MavenPublication) {
            groupId = group
            artifactId = artifactIdAAR
            version = versionName

            artifact("${buildDir}/outputs/aar/androidsvg-release.aar") {
                // wrap in a closure because this task isn't defined 'till
                // the android plugin finishes
                builtBy { tasks["assembleRelease"] }
            }

            pom {
                packaging = 'aar'

                name = libraryName
                description = libraryDescription
                url = siteUrl

                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = gitUrl
                    developerConnection = gitUrl
                    url = siteUrl
                }
            }
        }
    }
}
